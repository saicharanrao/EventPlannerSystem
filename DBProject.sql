CREATE TABLE CUSTOMER(
CUSTNO INT PRIMARY KEY, 
CUSTNAME VARCHAR(30) NOT NULL,
ISMEMBER CHAR NOT NULL,
PHONE INT,
CITY VARCHAR(20),
ZIP INT);

CREATE TABLE EVENTEMPLOYEE(
EMPNO VARCHAR(10) PRIMARY KEY,
EMPNAME VARCHAR(30) NOT NULL,
DEPARTMENT VARCHAR(15) NOT NULL,
PHONE INTEGER NOT NULL,
EMAIL VARCHAR(55) NOT NULL
);

CREATE TABLE EVENTRESOURCE(
RESNO VARCHAR(10) PRIMARY KEY,
QUANTITY INT NOT NULL,
RESNAME VARCHAR(20) NOT NULL
);

CREATE TABLE EVENTFACILITY(
FACNO VARCHAR(10) PRIMARY KEY,
FACNAME VARCHAR(20) NOT NULL
);

CREATE TABLE AMENITIES(
AMNO VARCHAR(10) PRIMARY KEY,
AMNAME VARCHAR(25) NOT NULL,
FACNO VARCHAR(10) NOT NULL REFERENCES EVENTFACILITY(FACNO)ON DELETE CASCADE);

CREATE TABLE OPTIONS(
OPTIONID INT PRIMARY KEY,
PRICE INT NOT NULL);

CREATE TABLE MUSIC(
OPTIONID INT PRIMARY KEY REFERENCES OPTIONS(OPTIONID) ON DELETE CASCADE,
GENRE VARCHAR(20) NOT NULL);

CREATE TABLE FOOD(
OPTIONID INT PRIMARY KEY REFERENCES OPTIONS(OPTIONID) ON DELETE CASCADE,
CUISINE VARCHAR(20) NOT NULL);

CREATE TABLE DECORATION(
OPTIONID INT PRIMARY KEY REFERENCES OPTIONS(OPTIONID) ON DELETE CASCADE,
STYLE VARCHAR(20) NOT NULL);

CREATE TABLE EVENTREQUEST(
EVENTNO VARCHAR(15) PRIMARY KEY,
DATEREQUESTED DATE NOT NULL,
DATEREVIEWED DATE NOT NULL,
STATUS CHAR NOT NULL,
ESTCOST DECIMAL(10,2) DEFAULT 0.00 ,
ESTAUD INT NOT NULL ,
CUSTNO INT NOT NULL REFERENCES CUSTOMER(CUSTNO) ON DELETE CASCADE,
FACNO VARCHAR(10) NOT NULL REFERENCES EVENTFACILITY(FACNO) ON DELETE CASCADE,
STARTDATE DATE NOT NULL,
ENDDATE DATE NOT NULL);

CREATE TABLE EVENTTASK(
TASKNO INT PRIMARY KEY,
STARTDATE DATE NOT NULL,
ENDDATE DATE NOT NULL,
EMPNO VARCHAR(15) NOT NULL REFERENCES EVENTEMPLOYEE(EMPNO) ON DELETE CASCADE,
EVENTNO VARCHAR(15) NOT NULL REFERENCES EVENTREQUEST(EVENTNO) ON DELETE CASCADE
);

CREATE TABLE ORGANIZEDAT(
TASKNO varchar(10) REFERENCES EVENTTASK(TASKNO) ON DELETE CASCADE,
AMNO VARCHAR(15) REFERENCES AMENITIES(AMNO) ON DELETE CASCADE,
PRIMARY KEY(TASKNO,AMNO)
);

CREATE TABLE CHOOSES(
EVENTNO VARCHAR(15) REFERENCES EVENTREQUEST(EVENTNO) ON DELETE CASCADE,
OPTIONID INT REFERENCES OPTIONS(OPTIONID) ON DELETE CASCADE,
PRIMARY KEY(EVENTNO,OPTIONID)
);

CREATE TABLE USES(
TASKNO varchar(15) REFERENCES EVENTTASK(TASKNO) ON DELETE CASCADE,
RESNO VARCHAR(15) REFERENCES EVENTRESOURCE(RESNO) ON DELETE CASCADE,
PRIMARY KEY(TASKNO,RESNO)
);



Insert into EVENTEMPLOYEE (EMPNO,EMPNAME,DEPARTMENT,EMAIL,PHONE,RANGE) values ('Emp1','Sam','Food','sam@gmail.com','9998886660','H');
Insert into EVENTEMPLOYEE (EMPNO,EMPNAME,DEPARTMENT,EMAIL,PHONE,RANGE) values ('Emp2','Jim','Decoration','jim@yahoo.com','7778889990','H');
Insert into EVENTEMPLOYEE (EMPNO,EMPNAME,DEPARTMENT,EMAIL,PHONE,RANGE) values ('Emp3','Tom','Music','tom@hotmail.com','6667778880','H');

Insert into EVENTEMPLOYEE (EMPNO,EMPNAME,DEPARTMENT,EMAIL,PHONE,RANGE) values ('Emp4','Jam','Food','sam@gmail.com','9998886660','L');
Insert into EVENTEMPLOYEE (EMPNO,EMPNAME,DEPARTMENT,EMAIL,PHONE,RANGE) values ('Emp5','Rim','Decoration','jim@yahoo.com','7778889990','L');
Insert into EVENTEMPLOYEE (EMPNO,EMPNAME,DEPARTMENT,EMAIL,PHONE,RANGE) values ('Emp6','Dom','Music','tom@hotmail.com','6667778880','L');

Insert into EVENTEMPLOYEE (EMPNO,EMPNAME,DEPARTMENT,EMAIL,PHONE,RANGE) values ('Emp7','SaI','Food','sam@gmail.com','9998886660','M');
Insert into EVENTEMPLOYEE (EMPNO,EMPNAME,DEPARTMENT,EMAIL,PHONE,RANGE) values ('Emp8','Jim JONG','Decoration','jim@yahoo.com','7778889990','M');
Insert into EVENTEMPLOYEE (EMPNO,EMPNAME,DEPARTMENT,EMAIL,PHONE,RANGE) values ('Emp9','Tom HARDY','Music','tom@hotmail.com','6667778880','M');


Insert into CUSTOMER (CUSTNO,CUSTNAME,PHONE,CITY,ZIP,IsMember) values (1,'Robin','3520201111','Dallas','75050','Y');
Insert into CUSTOMER (CUSTNO,CUSTNAME,PHONE,CITY,ZIP,IsMember) values (2,'Ross','3521561111','Newark','12867','N');
Insert into CUSTOMER (CUSTNO,CUSTNAME,PHONE,CITY,ZIP,IsMember) values (3,'Lisa','4444201111','Austin','72350','Y');

Insert into EVENTRESOURCE (RESNO,RESNAME,QUANTITY) values ('R100','attendant',10);
Insert into EVENTRESOURCE (RESNO,RESNAME,QUANTITY) values ('R101','security',15);
Insert into EVENTRESOURCE (RESNO,RESNAME,QUANTITY) values ('R102','usher',10);
Insert into EVENTRESOURCE (RESNO,RESNAME,QUANTITY) values ('R103','nurse',20);
Insert into EVENTRESOURCE (RESNO,RESNAME,QUANTITY) values ('R104','janitor',15);
Insert into EVENTRESOURCE (RESNO,RESNAME,QUANTITY) values ('R105','food service',10);

Insert into EVENTFACILITY (FACNO,FACNAME) values ('F100','A Convention');
Insert into EVENTFACILITY (FACNO,FACNAME) values ('F101','B Garden Hall');
Insert into EVENTFACILITY (FACNO,FACNAME) values ('F102','C Hill Park');

Insert into AMENITIES (AMNO,FACNO,AMNAME) values ('A100','F101','Club House');
Insert into AMENITIES (AMNO,FACNO,AMNAME) values ('A101','F102','TI Auditorium');
Insert into AMENITIES (AMNO,FACNO,AMNAME) values ('A102','F100','Amphitheatre');
Insert into AMENITIES (AMNO,FACNO,AMNAME) values ('A103','F101','Mini Hall');
Insert into AMENITIES (AMNO,FACNO,AMNAME) values ('A104','F102','Mini Hall');
Insert into AMENITIES (AMNO,FACNO,AMNAME) values ('A105','F101','Conference Hall');
Insert into AMENITIES (AMNO,FACNO,AMNAME) values ('A106','F100','Auditorium');


Insert into OPTIONS (OPTIONID,PRICE,TYPE) values (1,200,'MUSIC');
Insert into OPTIONS (OPTIONID,PRICE,TYPE) values (2,300,'MUSIC');
Insert into OPTIONS (OPTIONID,PRICE,TYPE) values (3,400,'MUSIC');
Insert into OPTIONS (OPTIONID,PRICE,TYPE) values (4,300,'DECORATION');
Insert into OPTIONS (OPTIONID,PRICE,TYPE) values (5,400,'DECORATION');
Insert into OPTIONS (OPTIONID,PRICE,TYPE) values (6,500,'DECORATION');
Insert into OPTIONS (OPTIONID,PRICE,TYPE) values (7,600,'FOOD');
Insert into OPTIONS (OPTIONID,PRICE,TYPE) values (8,700,'FOOD');
Insert into OPTIONS (OPTIONID,PRICE,TYPE) values (9,800,'FOOD');

Insert into MUSIC (OPTIONID,GENRE) values (1,'Pop');
Insert into MUSIC (OPTIONID,GENRE) values (2,'Rock');
Insert into MUSIC (OPTIONID,GENRE) values (3,'Classic');

Insert into FOOD (OPTIONID,CUISINE) values (7,'Chinese');
Insert into FOOD (OPTIONID,CUISINE) values (8,'Continental');
Insert into FOOD (OPTIONID,CUISINE) values (9,'Italian');

Insert into DECORATION (OPTIONID,STYLE) values (4,'Floral');
Insert into DECORATION (OPTIONID,STYLE) values (5,'Contemporary');
Insert into DECORATION (OPTIONID,STYLE) values (6,'Italian');

Insert into EVENTREQUEST (EVENTNO,DATEREQUESTED,DATEREVIEWED,CUSTNO,FACNO,STATUS,ESTCOST,ESTAUD,STARTDATE,ENDDATE) 
values ('E100','15-OCT-13','17-OCT-13',2,'F100','Y',0.00,150,'24-OCT-13','26-OCT-13');
Insert into EVENTREQUEST (EVENTNO,DATEREQUESTED,DATEREVIEWED,CUSTNO,FACNO,STATUS,ESTCOST,ESTAUD,STARTDATE,ENDDATE) 
values ('E101','02-JAN-14','01-JAN-13',1,'F101','Y',0.00,200,'06-JAN-14','09-JAN-14');
Insert into EVENTREQUEST (EVENTNO,DATEREQUESTED,DATEREVIEWED,CUSTNO,FACNO,STATUS,ESTCOST,ESTAUD,STARTDATE,ENDDATE) 
values ('E102','20-JAN-14','21-JAN-14',3,'F102','Y',0.00,150,'01-FEB-14','03-FEB-14');
Insert into EVENTREQUEST (EVENTNO,DATEREQUESTED,DATEREVIEWED,CUSTNO,FACNO,STATUS,ESTCOST,ESTAUD,STARTDATE,ENDDATE) 
values ('E103','31-JAN-15','14-FEB-15',1,'F102','N',0.00,123,'23-FEB-15','25-FEB-15');


Insert into CHOOSES (EVENTNO,OPTIONID) values ('E101',3);
Insert into CHOOSES (EVENTNO,OPTIONID) values ('E101',8);
Insert into CHOOSES (EVENTNO,OPTIONID) values ('E101',5);
Insert into CHOOSES (EVENTNO,OPTIONID) values ('E102',2);
Insert into CHOOSES (EVENTNO,OPTIONID) values ('E102',7);
Insert into CHOOSES (EVENTNO,OPTIONID) values ('E102',6);
Insert into CHOOSES (EVENTNO,OPTIONID) values ('E103',1);
Insert into CHOOSES (EVENTNO,OPTIONID) values ('E103',9);
Insert into CHOOSES (EVENTNO,OPTIONID) values ('E103',4);



--These are inserted after procedure execution because event task needs to be filled.
INSERT INTO USES VALUES('E102','R100');
INSERT INTO USES VALUES('E102','R101');
INSERT INTO USES VALUES('E103','R100');

INSERT INTO ORGANIZEDAT VALUES('E102','A100');
INSERT INTO ORGANIZEDAT VALUES('E102','A101');
INSERT INTO ORGANIZEDAT VALUES('E101','A100');



--PROCEDURE FOR CALCULATING TOTAL COST
CREATE OR REPLACE PROCEDURE UPDATE_ESTCOST AS
CURSOR CBK IS SELECT C.EVENTNO  ,SUM(O.PRICE) TOTAL FROM OPTIONS O,CHOOSES C WHERE O.OPTIONID=C.OPTIONID GROUP BY C.EVENTNO;
REMP CBK%ROWTYPE;
BEGIN
OPEN CBK;
LOOP
FETCH CBK INTO REMP;
EXIT WHEN CBK%NOTFOUND;
UPDATE EVENTREQUEST SET ESTCOST=REMP.TOTAL WHERE EVENTNO=REMP.EVENTNO;
END LOOP;
CLOSE CBK;
END;
/

CALL UPDATE_ESTCOST();


SELECT * FROM EVENTTASK;

CREATE OR REPLACE PROCEDURE UPDATE_DISCOUNT AS
CURSOR DISC IS SELECT CUSTNO FROM CUSTOMER WHERE ISMEMBER='Y';
REMP DISC%ROWTYPE;
BEGIN
OPEN DISC;
LOOP
FETCH DISC INTO REMP;
EXIT WHEN DISC%NOTFOUND;
UPDATE EVENTREQUEST E1 SET ESTCOST=(SELECT (ESTCOST/2) FROM EVENTREQUEST E2 WHERE E1.EVENTNO=E2.EVENTNO) WHERE CUSTNO=REMP.CUSTNO;
END LOOP;
CLOSE DISC;
END;
/

CALL UPDATE_DISCOUNT();





SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE TASKINSERT
AS CURSOR CSR IS SELECT EVENTNO,ESTCOST,STATUS FROM EVENTREQUEST ;
REMP CSR%ROWTYPE;
BEGIN
OPEN CSR;
LOOP
FETCH CSR INTO REMP;
EXIT WHEN CSR%NOTFOUND;
IF(REMP.ESTCOST>0 AND REMP.ESTCOST<=500 AND REMP.STATUS='Y')THEN 
UPDATE EVENTTASK SET EMPNO = (SELECT EMPNO FROM
( SELECT EMPNO FROM EVENTEMPLOYEE WHERE RANGE='L'
ORDER BY dbms_random.value )
WHERE rownum = 1 ) WHERE TASKNO= REMP.EVENTNO;
ELSE IF(REMP.ESTCOST>500 AND REMP.ESTCOST<=1000 AND REMP.STATUS='Y')THEN 
UPDATE EVENTTASK SET EMPNO = (SELECT EMPNO FROM
( SELECT EMPNO FROM EVENTEMPLOYEE WHERE RANGE='M'
ORDER BY dbms_random.value )
WHERE rownum = 1 ) WHERE TASKNO= REMP.EVENTNO;
ELSE IF(REMP.ESTCOST>1000 AND REMP.STATUS='Y')THEN 
UPDATE EVENTTASK SET EMPNO = (SELECT EMPNO FROM
( SELECT EMPNO FROM EVENTEMPLOYEE WHERE RANGE='H'
ORDER BY dbms_random.value )
WHERE rownum = 1 ) WHERE TASKNO= REMP.EVENTNO;
END IF;
END IF;
END IF;
END LOOP;
CLOSE CSR;
END;
/
CALL TASKINSERT();

select * from eventtask;

select * from EVENTREQUEST;


alter table eventtask modify empno varchar(10) null;
alter table eventtask modify TASKNO varchar(10);
DELETE  FROM EVENTTASK;



CREATE OR REPLACE TRIGGER EVENTTASKINSERT 
AFTER INSERT OR UPDATE ON EVENTREQUEST 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW 
WHEN (NEW.STATUS='Y')
DECLARE

BEGIN
  IF INSERTING THEN
  INSERT INTO EVENTTASK (TASKNO,STARTDATE,ENDDATE,EVENTNO,EMPNO) 
  VALUES
  (:NEW.EVENTNO,:NEW.STARTDATE,:NEW.ENDDATE,:NEW.EVENTNO,NULL);
  END IF;
END;

SELECT * FROM EVENTTASK;
Insert into EVENTREQUEST (EVENTNO,DATEREQUESTED,DATEREVIEWED,CUSTNO,FACNO,STATUS,ESTCOST,ESTAUD,STARTDATE,ENDDATE) 
values ('E107','15-OCT-12','17-OCT-12',3,'F101','Y',0.00,150,'24-OCT-12','26-OCT-12');


SELECT * FROM EVENTRESOURCE;

set define off;
CREATE OR REPLACE TRIGGER UPDATE_RESOURCES
  BEFORE INSERT ON USES
  FOR EACH ROW
DECLARE
  FI VARCHAR(10);
BEGIN
FI:=:new.RESNO;
      UPDATE EVENTRESOURCE SET QUANTITY=QUANTITY-1 WHERE RESNO=FI;
END;
/




